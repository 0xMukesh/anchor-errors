[
  {
    "code": "0",
    "error": "NotRentExempt",
    "message": "Lamport balance below rent-exempt threshold"
  },
  {
    "code": "1",
    "error": "InsufficientFunds",
    "message": "Insufficient funds for the operation requested"
  },
  {
    "code": "2",
    "error": "InvalidMint",
    "message": "Invalid mint"
  },
  {
    "code": "3",
    "error": "MintMismatch",
    "message": "Account not associated with this mint"
  },
  {
    "code": "4",
    "error": "OwnerMismatch",
    "message": "Owner does not match"
  },
  {
    "code": "5",
    "error": "FixedSupply",
    "message": "The token's supply is fixed and new tokens cannot be minted"
  },
  {
    "code": "6",
    "error": "AlreadyInUse",
    "message": "The account cannot be initialized because it is already being used"
  },
  {
    "code": "7",
    "error": "InvalidNumberOfProvidedSigners",
    "message": "Invalid number of provided signers"
  },
  {
    "code": "8",
    "error": "InvalidNumberOfRequiredSigners",
    "message": "Invalid number of required signers"
  },
  {
    "code": "9",
    "error": "UninitializedState",
    "message": "State is uninitialized"
  },
  {
    "code": "10",
    "error": "NativeNotSupported",
    "message": "Instruction does not support native tokens"
  },
  {
    "code": "11",
    "error": "NonNativeHasBalance",
    "message": "Non-native account can only be closed if its balance is zero"
  },
  {
    "code": "12",
    "error": "InvalidInstruction",
    "message": "Invalid instruction"
  },
  {
    "code": "13",
    "error": "InvalidState",
    "message": "State is invalid for requested operation"
  },
  {
    "code": "14",
    "error": "Overflow",
    "message": "Operation overflowed"
  },
  {
    "code": "15",
    "error": "AuthorityTypeNotSupported",
    "message": "Account does not support specified authority type"
  },
  {
    "code": "16",
    "error": "MintCannotFreeze",
    "message": "This token mint cannot freeze accounts."
  },
  {
    "code": "17",
    "error": "AccountFrozen",
    "message": "Account is frozen; all account operations will fail"
  },
  {
    "code": "18",
    "error": "MintDecimalsMismatch",
    "message": "Mint decimals mismatch between the client and mint"
  },
  {
    "code": "19",
    "error": "NonNativeNotSupported",
    "message": "Instruction does not support non-native tokens"
  },
  {
    "code": "20",
    "error": "ExtensionTypeMismatch",
    "message": "Extension type does not match already existing extensions"
  },
  {
    "code": "21",
    "error": "ExtensionBaseMismatch",
    "message": "Extension does not match the base type provided"
  },
  {
    "code": "22",
    "error": "ExtensionAlreadyInitialized",
    "message": "Extension already initialized on this account"
  },
  {
    "code": "23",
    "error": "ConfidentialTransferAccountHasBalance",
    "message": "An account can only be closed if its confidential balance is zero"
  },
  {
    "code": "24",
    "error": "ConfidentialTransferAccountNotApproved",
    "message": "Account not approved for confidential transfers"
  },
  {
    "code": "25",
    "error": "ConfidentialTransferDepositsAndTransfersDisabled",
    "message": "Account not accepting deposits or transfers"
  },
  {
    "code": "26",
    "error": "ConfidentialTransferElGamalPubkeyMismatch",
    "message": "ElGamal public key mismatch"
  },
  {
    "code": "27",
    "error": "ConfidentialTransferBalanceMismatch",
    "message": "Balance mismatch"
  },
  {
    "code": "28",
    "error": "MintHasSupply",
    "message": "Mint has non-zero supply. Burn all tokens before closing the mint"
  },
  {
    "code": "29",
    "error": "NoAuthorityExists",
    "message": "No authority exists to perform the desired operation"
  },
  {
    "code": "30",
    "error": "TransferFeeExceedsMaximum",
    "message": "Transfer fee exceeds maximum of 10,000 basis points"
  },
  {
    "code": "31",
    "error": "MintRequiredForTransfer",
    "message": "Mint required for this account to transfer tokens, use `transfer_checked` or `transfer_checked_with_fee`"
  },
  {
    "code": "32",
    "error": "FeeMismatch",
    "message": "Calculated fee does not match expected fee"
  },
  {
    "code": "33",
    "error": "FeeParametersMismatch",
    "message": "Fee parameters associated with zero-knowledge proofs do not match fee parameters in mint"
  },
  {
    "code": "34",
    "error": "ImmutableOwner",
    "message": "The owner authority cannot be changed"
  },
  {
    "code": "35",
    "error": "AccountHasWithheldTransferFees",
    "message": "An account can only be closed if its withheld fee balance is zero, harvest fees to the mint and try again"
  },
  {
    "code": "36",
    "error": "NoMemo",
    "message": "No memo in previous instruction; required for recipient to receive a transfer"
  },
  {
    "code": "37",
    "error": "NonTransferable",
    "message": "Transfer is disabled for this mint"
  },
  {
    "code": "38",
    "error": "NonTransferableNeedsImmutableOwnership",
    "message": "Non-transferable tokens can't be minted to an account without immutable ownership"
  },
  {
    "code": "39",
    "error": "MaximumPendingBalanceCreditCounterExceeded",
    "message": "The total number of `Deposit` and `Transfer` instructions to an account cannot exceed the associated `maximum_pending_balance_credit_counter`"
  },
  {
    "code": "40",
    "error": "MaximumDepositAmountExceeded",
    "message": "Deposit amount exceeds maximum limit"
  },
  {
    "code": "41",
    "error": "CpiGuardSettingsLocked",
    "message": "CPI Guard cannot be enabled or disabled in CPI"
  },
  {
    "code": "42",
    "error": "CpiGuardTransferBlocked",
    "message": "CPI Guard is enabled, and a program attempted to transfer user funds via CPI without using a delegate"
  },
  {
    "code": "43",
    "error": "CpiGuardBurnBlocked",
    "message": "CPI Guard is enabled, and a program attempted to burn user funds via CPI without using a delegate"
  },
  {
    "code": "44",
    "error": "CpiGuardCloseAccountBlocked",
    "message": "CPI Guard is enabled, and a program attempted to close an account via CPI without returning lamports to owner"
  },
  {
    "code": "45",
    "error": "CpiGuardApproveBlocked",
    "message": "CPI Guard is enabled, and a program attempted to approve a delegate via CPI"
  },
  {
    "code": "46",
    "error": "CpiGuardSetAuthorityBlocked",
    "message": "CPI Guard is enabled, and a program attempted to add or replace an authority via CPI"
  },
  {
    "code": "47",
    "error": "CpiGuardOwnerChangeBlocked",
    "message": "Account ownership cannot be changed while CPI Guard is enabled"
  },
  {
    "code": "48",
    "error": "ExtensionNotFound",
    "message": "Extension not found in account data"
  },
  {
    "code": "49",
    "error": "NonConfidentialTransfersDisabled",
    "message": "Non-confidential transfers disabled"
  },
  {
    "code": "50",
    "error": "ConfidentialTransferFeeAccountHasWithheldFee",
    "message": "An account can only be closed if the confidential withheld fee is zero"
  },
  {
    "code": "51",
    "error": "InvalidExtensionCombination",
    "message": "A mint or an account is initialized to an invalid combination of extensions"
  },
  {
    "code": "52",
    "error": "InvalidLengthForAlloc",
    "message": "Extension allocation with overwrite must use the same length"
  }
]
